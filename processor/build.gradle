plugins {
    id 'groovy'
    id 'info.solidsoft.pitest'
    id 'jacoco'
    id 'java'
    id 'net.ltgt.errorprone'
}

dependencies {

    errorprone enforcedPlatform(project(':dependencies'))
    errorprone 'com.google.errorprone:error_prone_core'
    errorprone 'com.uber.nullaway:nullaway'

    annotationProcessor enforcedPlatform(project(':dependencies'))
    annotationProcessor 'com.google.auto.service:auto-service'
    annotationProcessor 'com.google.dagger:dagger'
    annotationProcessor 'com.google.dagger:dagger-compiler'

    compileOnly 'com.google.auto.service:auto-service-annotations'
    compileOnly 'org.jetbrains:annotations'

    implementation project(':annotations')
    implementation 'com.google.dagger:dagger'
    implementation 'javax.annotation:javax.annotation-api'

    implementation enforcedPlatform(project(':dependencies'))
    implementation 'com.squareup:javapoet'
    implementation 'org.apache.commons:commons-lang3'

    testImplementation 'io.github.joke:spock-deepmock'
    testImplementation 'io.github.joke:spock-mockable'
    testImplementation 'org.objenesis:objenesis'
    testImplementation 'org.slf4j:slf4j-simple'
    testImplementation 'org.spockframework:spock-core'
}

tasks.withType(JavaCompile) {
    options.errorprone {
        excludedPaths = '.*/Dagger.*'
        error('NullAway')
        option('NullAway:AnnotatedPackages', project.group)
    }
}

test {
    useJUnitPlatform()
    jvmArgs([
            "-javaagent:${classpath.find { it.name.contains('spock-mockable') }.absolutePath}",
            '--add-opens=java.compiler/javax.annotation.processing=ALL-UNNAMED'
    ])
}

pitest {
    jvmArgs = ['--add-opens=java.compiler/javax.annotation.processing=ALL-UNNAMED']
}
